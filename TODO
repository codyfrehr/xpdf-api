- should make use of the term "RICH text" or "rich PDF" in your javadocs and documentation, and make a special note about how this only works on PDF files with RICH TEXT
- test all code examples from readme and javadocs to ensure they are working!
- should we impose a default timeout of 30 seconds on the tool?
  on one hand, its a very nice safeguard that 99% of use cases will fall into, and will prevent user's apps from inadvertently hanging.
  on the other hand, it imposes a constraint on the user they didnt choose (maybe we can provide option to make unlimited?)
- write README
  - add special note somewhere about how this will only work on PDF files with RICH TEXT
- update github project "About" section, and other general settings for the repo
- setup namecheap xpdf.io domain to automatically redirect to github repo, until website built https://www.namecheap.com/support/knowledgebase/article.aspx/385/2237/how-to-set-up-a-url-redirect-for-a-domain/
  but first, need to get hosting for site and install ssl cert
- request derek to add link to your library on their webpage
- reorganize SCRIBBLES into official supporting documents
  - write CONTRIBUTING (is this standard name for developer instructions to contribute? DEVELOPERS seems like a better name for file maybe?)
  - what other files?
- set up github CI/CD pipeline
- set up github issue management
- fix broken github links on resume and website
- figure out process to deploy to maven central repo
  - take into consideration repos which provide download statistics: https://blog.sonatype.com/2010/12/now-available-central-download-statistics-for-oss-projects/
  - guide: https://maven.apache.org/repository/guide-central-repository-upload.html
    - requirements (link from within page above) https://central.sonatype.org/publish/requirements/
      verify all key metadata has been added to poms (ie lombok has <issue management>, <developers>, etc)
  - figure out maven-release-plugin, to control versioning and release process to maven central
    a good starting point for this would be to find a popular/respected open-source repo using pom configs, and see if they have maven release plugin configured, and how they do it.
- build really basic homepage for website, resembling layout of https://kotest.io/docs or even just the simpler https://mockk.io/, or like that license plugin page

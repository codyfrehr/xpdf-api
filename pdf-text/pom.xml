<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>pdf-text</artifactId>

    <!--todo: pick a repository to host your artifacts for maven central.
        take into consideration repos which provide download statistics: https://blog.sonatype.com/2010/12/now-available-central-download-statistics-for-oss-projects/ -->
    <parent>
        <groupId>io.xpdftools</groupId>
        <artifactId>xpdf-tools</artifactId>
        <!--todo: think about versioning scheme...
                should you be trying to match xpdf lib versions..?
                in doing so, you are relinquishing the meaning and purpose of your version numbers..
                for example, what if you have a major change? you would be unable to convey that because you are trying to match xpdfs major version-->
        <version>4.4.0-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>io.xpdftools</groupId>
            <artifactId>common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>

    <!--todo: is there a way to structure the project or a way to package it so that stuff in common does not get exposed to client?
            there are a lot of things that they dont need access to, such as XpdfTarget...
            these things shouldnt be available to end user, should they..?
            -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-javadoc-plugin</artifactId>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>